bubble设计模式
======================================

RoboMaster机器人的软件系统主要包含了感知、决策和控制三个部分。
控制部分接收来着遥控器、裁判系统或上位机的输入，通过控制算法，操纵实际的机械结构。控制部分主要由MUC负责，再本文档中不再赘述。

感知和决策部分是Bubble主要实现的内容。在RMU中，机器人所处的环境使得机器人需要执行各种不同的任务，这些任务在Bubble中以不同功能包的形式组织在一起。
通过对这些功能包的改变、组合，能够实现机器人在RoboMaster赛场上完成这些任务。

系统架构
------------------------------------


模块划分
------------------------------------


消息接口
------------------------------------
在 ``bubble_interface`` 模块中定义了Bubble Node间通讯的额外数据类型，这些数据类型包含了：

* 比赛裁判系统数据
    - 由 ``bubble_interface/game_msgs`` 功能包实现
    - 定义上位机需要使用裁判系统的ROS数据类型
* 控制数据
    - 由 ``bubble_interface/rmctrl_msgs`` 功能包实现
    - 定义了下位机执行控制指令的ROS数据类型
* 目标识别数据
    - 由 ``bubble_interface/bboxes_ex_msgs`` 功能包实现
    - 定义了目标识别器识别对象的ROS数据类型
    - 关于 ``bboxes_ex_msgs`` 功能包的更多信息，您可以参阅 ``相关项目`` 和 ``bboxes_ex_msgs的REAMDE文件`` 

