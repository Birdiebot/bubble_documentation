项目治理
============================

关于Bubble治理的背景
----------------------------
Bubble是我们在RMUC2022赛季一次全新的尝试。在RMU2021结束时，我们确定了Bubble需要开发的主要任务，并逐步将代码移动至ROS2框架下。
在Bubble框架、功能包结构、最基础功能基本完成后，我们会定期通过会议的方式，对Bubble下一步开发进行讨论，并实现优先级较高的功能。

2022年疫情的对Bubble的项目推进造成了巨大的影响，部分功能仍未进行理想的测试，一些预想的功能还没有得到实现，项目的性能目前仍有很大的提升空间。
此外，由于队伍的实际情况，视觉算法部分确实存在着较大的人员缺口。队员在实际备赛的过程中，疲于对整体功能的调试，失去了对特定功能深入思考和极致优化的时间。

一方面，Bubble的核心维护者希望探索robomaster赛场上一些全新的功能，将新的技术带入RoboMaster赛场。但在另一方面，由于时间有限，我们也希望对已开发的功能模块能够在RoboMaster赛场上发挥出实际的作用。
通过培养新成员的方式，能够有效的解决这些问题。但培养新队员，同样会花费巨大的时间成本，且存在着较大的不确定性。队员的加入和离开也影响着项目开发的连贯性。

在RMU2021中，木鸢Birdiebot希望视觉算法部分软件能够具有一定通用性，框架适用于不同的机器人，这一点于ROS的开发目标有一定的重合。
对于ROS生态，它提供了庞大功能库和工具，这为机器人的快速开发和迭代提供了极大的帮助。
对于RoboMaster的开源生态，每年都会涌现出大批优秀的开源作品，这些开源作品帮助着其他队伍在特定的方面去不断进步。

此外，RMU赛场也随着时间的推演，更新出许多前所未有的任务，这以为着机器人软件需要根据这些任务及时地做出调整。
如果可以利用ROS社区庞大的生态助力，再配合RoboMaster开源生态中优秀开源算法。
是否能够帮助RMU的参赛队伍的视觉算法部分，不再花费时间在之前已经造好的轮子上，而去探索RMU赛场上的更多可能呢？

Bubble是尝试解决这个问题而带来的一个可能性。
未来的Bubble项目可能会有前所未有的治理方式，也许可能会因为未知的原因停止维护，如同泡沫炸裂一般。
Bubble在开发的过程中，我们多次意识到它有很多不完善的地方，可能只是一个Demo级的小程序。
但依赖于ROS和RoboMaster开源生态，我们依然认为Bubble具有很大的潜力，能够在迭代中在RoboMaster赛场发挥全新的可能，所以有了现在的Bubble。

未来的Bubble项目治理
--------------------------------
如果您对Bubble的项目治理有想法，我们欢迎您与我们取得联系。Bubble欢迎其他RUM队伍一起加入Bubble的开发，获得最新的Bubble开发版代码和Bubble实现的新功能。

若您或您的队伍有意向加入Bubble的治理，我们能够：

- 开放全部最新的Bubble代码
- 竭尽所能的提供全部的技术支持
- 为您组建Bubble技术指导委员会（筹）

但我们希望您：

- 遵循RoboMaster的各项比赛规定，认可并热爱RoboMaster比赛传递的价值观
- 参与Bubble技术指导委员会（筹）的所组织的活动
- 能够对发行版Bubble有一定的了解，在可能的情况下将Bubble用于RMU比赛
- 为了维护RMU的公平性，尽可能的产生对Bubble不小于其他维护者（团队）的贡献
  
在未来的一段时间中，Bubble仍会以与之前相似的治理流程，在队伍内部讨论并维护项目，在合适的时机发布Bubble的最新发行版本。

我们会根据实际加入Bubble项目的开发者数量，拟定技术指导委员会（筹）的章程和工作流程，探索Bubble的治理模式。

